<?xml version="1.0"?>
<!-- fusebox-1.gir generated by valadoc, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="GLib" version="2.0"/>
<include name="Gtk" version="4.0"/>
<include name="Gio" version="2.0"/>
<package name="fusebox-1"/>
<c:include name="fusebox-1.h"/>
<namespace name="fusebox" version="1" c:prefix="Fusebox" c:identifier-prefixes="Fusebox" c:symbol-prefixes="fusebox" shared-library="fusebox-1.so.1">
	<class name="FusesManager" c:type="FuseboxFusesManager" c:symbol-prefix="fuses_manager" glib:type-name="FuseboxFusesManager" glib:get-type="fusebox_fuses_manager_get_type" glib:type-struct="FusesManagerClass" parent="GObject.Object">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FusesManagerPrivate" c:type="FuseboxFusesManagerPrivate*"/>
		</field>
		<function name="get_default" c:identifier="fusebox_fuses_manager_get_default">
			<return-value transfer-ownership="full">
				<type name="fusebox.FusesManager" c:type="FuseboxFusesManager*"/>
			</return-value>
		</function>
		<method name="has_fuses" c:identifier="fusebox_fuses_manager_has_fuses">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.FusesManager" c:type="FuseboxFusesManager*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="get_fuses" c:identifier="fusebox_fuses_manager_get_fuses">
			<return-value transfer-ownership="none">
				<type name="GLib.List" c:type="GList*">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.FusesManager" c:type="FuseboxFusesManager*"/>
				</instance-parameter>
			</parameters>
		</method>
		<glib:signal name="fuse-added">
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<parameter name="fuse" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="FusesManagerClass" c:type="FuseboxFusesManagerClass" glib:is-gtype-struct-for="FusesManager">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FusesManagerPrivate" c:type="FuseboxFusesManagerPrivate" disguised="1"/>
	<class name="Fuse" c:type="FuseboxFuse" c:symbol-prefix="fuse" glib:type-name="FuseboxFuse" glib:get-type="fusebox_fuse_get_type" glib:type-struct="FuseClass" parent="GObject.Object" abstract="1">
		<field name="parent_instance" readable="0" private="1">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv" readable="0" private="1">
			<type name="FusePrivate" c:type="FuseboxFusePrivate*"/>
		</field>
		<field name="SEP" writable="1">
			<doc xml:whitespace="preserve">&lt;para&gt;The common used separator.&lt;/para&gt;</doc>
			<type name="utf8" c:type="gchar*"/>
		</field>
		<method name="get_widget" c:identifier="fusebox_fuse_get_widget">
			<doc xml:whitespace="preserve">&lt;para&gt;Returns the widget that contain the whole interface.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;GtkWidget&lt;/type&gt; containing the interface. &lt;/para&gt;</doc>
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="get_widget" invoker="get_widget">
			<doc xml:whitespace="preserve">&lt;para&gt;Returns the widget that contain the whole interface.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;GtkWidget&lt;/type&gt; containing the interface. &lt;/para&gt;</doc>
				<type name="Gtk.Widget" c:type="GtkWidget*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="shown" c:identifier="fusebox_fuse_shown">
			<doc xml:whitespace="preserve">&lt;para&gt;Called when the Fuse appears to the user.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="shown" invoker="shown">
			<doc xml:whitespace="preserve">&lt;para&gt;Called when the Fuse appears to the user.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="hidden" c:identifier="fusebox_fuse_hidden">
			<doc xml:whitespace="preserve">&lt;para&gt;Called when the Fuse disappear to the user.&lt;/para&gt;
&lt;para&gt;This is not called when the Fuse got destroyed or the window is closed, use ~Fuse &amp;lpar;&amp;rpar; instead.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<virtual-method name="hidden" invoker="hidden">
			<doc xml:whitespace="preserve">&lt;para&gt;Called when the Fuse disappear to the user.&lt;/para&gt;
&lt;para&gt;This is not called when the Fuse got destroyed or the window is closed, use ~Fuse &amp;lpar;&amp;rpar; instead.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</virtual-method>
		<method name="search" c:identifier="fusebox_fuse_search">
			<doc xml:whitespace="preserve">&lt;para&gt;This function should return the widget that contain the whole interface.&lt;/para&gt;
&lt;para&gt;When the user click on an action, the second parameter is send to the &lt;function&gt;fusebox_fuse_search_callback&lt;/function&gt; method&lt;/para&gt;</doc>
			<return-value transfer-ownership="none">
				<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;GHashTable&lt;/type&gt; containing two strings like {&amp;quot;Keyboard → Behavior → Duration&amp;quot;, &amp;quot;keyboard&amp;lt;sep&amp;gt;behavior&amp;quot;}
. &lt;/para&gt;</doc>
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="search" transfer-ownership="none">
					<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represent the search. &lt;/para&gt;</doc>
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="search_finish" c:identifier="fusebox_fuse_search_finish">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="search" invoker="search">
			<doc xml:whitespace="preserve">&lt;para&gt;This function should return the widget that contain the whole interface.&lt;/para&gt;
&lt;para&gt;When the user click on an action, the second parameter is send to the &lt;function&gt;fusebox_fuse_search_callback&lt;/function&gt; method&lt;/para&gt;</doc>
			<return-value transfer-ownership="none">
				<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;GHashTable&lt;/type&gt; containing two strings like {&amp;quot;Keyboard → Behavior → Duration&amp;quot;, &amp;quot;keyboard&amp;lt;sep&amp;gt;behavior&amp;quot;}
. &lt;/para&gt;</doc>
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="search" transfer-ownership="none">
					<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represent the search. &lt;/para&gt;</doc>
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" nullable="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<virtual-method name="search_finish" invoker="search_finish">
			<return-value transfer-ownership="full">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="search_callback" c:identifier="fusebox_fuse_search_callback">
			<doc xml:whitespace="preserve">&lt;para&gt;This function is used when the user click on a search result, it should show the selected setting &amp;lpar;right tab…&amp;rpar;.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="location" transfer-ownership="none">
					<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represents the setting to show. &lt;/para&gt;</doc>
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="search_callback" invoker="search_callback">
			<doc xml:whitespace="preserve">&lt;para&gt;This function is used when the user click on a search result, it should show the selected setting &amp;lpar;right tab…&amp;rpar;.&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="location" transfer-ownership="none">
					<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represents the setting to show. &lt;/para&gt;</doc>
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="category" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;The category under which the Fuse will be stored.&lt;/para&gt;
&lt;para&gt;Possible &lt;type&gt;FuseboxFuseCategory&lt;/type&gt; values are PERSONAL, HARDWARE, NETWORK or SYSTEM.&lt;/para&gt;</doc>
			<type name="fusebox.FuseCategory" c:type="FuseboxFuseCategory"/>
		</property>
		<method name="get_category" c:identifier="fusebox_fuse_get_category">
			<return-value transfer-ownership="none">
				<type name="fusebox.FuseCategory" c:type="FuseboxFuseCategory"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="code-name" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;The unique name representing the Fuse.&lt;/para&gt;
&lt;para&gt;It is also used to recognise it with the open-fuse command.&lt;/para&gt;</doc>
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_code_name" c:identifier="fusebox_fuse_get_code_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="display-name" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;The localised name of the Fuse.&lt;/para&gt;</doc>
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_display_name" c:identifier="fusebox_fuse_get_display_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="description" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;A short description of the Fuse.&lt;/para&gt;</doc>
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_description" c:identifier="fusebox_fuse_get_description">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="icon" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;The icon representing the Fuse.&lt;/para&gt;</doc>
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_icon" c:identifier="fusebox_fuse_get_icon">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="supported-settings" writable="1" construct-only="1">
			<doc xml:whitespace="preserve">&lt;para&gt;A map of settings:\/\/ endpoints and location to pass to the &lt;function&gt;fusebox_fuse_search_callback&lt;/function&gt; method if the value is not
&amp;percnt;NULL. For example {&amp;quot;input/keyboard&amp;quot;, &amp;quot;keyboard&amp;quot;}.&lt;/para&gt;</doc>
			<type name="GLib.HashTable" c:type="GHashTable*">
				<type name="utf8" c:type="gchar*"/>
				<type name="utf8" c:type="gchar*"/>
			</type>
		</property>
		<method name="get_supported_settings" c:identifier="fusebox_fuse_get_supported_settings">
			<return-value transfer-ownership="none">
				<type name="GLib.HashTable" c:type="GHashTable*">
					<type name="utf8" c:type="gchar*"/>
					<type name="utf8" c:type="gchar*"/>
				</type>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<property name="can-show" writable="1">
			<doc xml:whitespace="preserve">&lt;para&gt;Inform if the Fuse should be shown or not&lt;/para&gt;</doc>
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_can_show" c:identifier="fusebox_fuse_get_can_show">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
			</parameters>
		</method>
		<method name="set_can_show" c:identifier="fusebox_fuse_set_can_show">
			<return-value transfer-ownership="none">
				<type name="none" c:type="void"/>
			</return-value>
			<parameters>
				<instance-parameter name="self" transfer-ownership="none">
					<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
				</instance-parameter>
				<parameter name="value" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="visibility-changed" deprecated="1">
			<doc xml:whitespace="preserve">&lt;para&gt;Inform the application that the Fuse can now be listed in the available Fuses. The application will also listen to the notify::can-show signal.
&lt;/para&gt;</doc>
			<return-value transfer-ownership="full">
				<type name="none" c:type="void"/>
			</return-value>
		</glib:signal>
	</class>
	<record name="FuseClass" c:type="FuseboxFuseClass" glib:is-gtype-struct-for="Fuse">
		<field name="parent_class" readable="0" private="1">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="get_widget">
			<callback name="get_widget" c:type="get_widget">
				<return-value transfer-ownership="full">
					<type name="Gtk.Widget" c:type="GtkWidget*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="shown">
			<callback name="shown" c:type="shown">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="hidden">
			<callback name="hidden" c:type="hidden">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="search">
			<callback name="search" c:type="search">
				<return-value transfer-ownership="none">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
					<parameter name="search" transfer-ownership="none">
						<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represent the search. &lt;/para&gt;</doc>
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="_callback_" transfer-ownership="none" nullable="1" closure="3" scope="async">
						<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
					</parameter>
					<parameter name="_callback__target" transfer-ownership="none" nullable="1">
						<type name="gpointer" c:type="void*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="search_finish">
			<callback name="search_finish" c:type="search_finish">
				<return-value transfer-ownership="full">
					<type name="GLib.HashTable" c:type="GHashTable*">
						<type name="utf8" c:type="gchar*"/>
						<type name="utf8" c:type="gchar*"/>
					</type>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
					<parameter name="_res_" transfer-ownership="none">
						<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="search_callback">
			<callback name="search_callback" c:type="search_callback">
				<return-value transfer-ownership="full">
					<type name="none" c:type="void"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="fusebox.Fuse" c:type="FuseboxFuse*"/>
					</parameter>
					<parameter name="location" transfer-ownership="none">
						<doc xml:whitespace="preserve">&lt;para&gt;a &lt;type&gt;gchar&lt;/type&gt; that represents the setting to show. &lt;/para&gt;</doc>
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FusePrivate" c:type="FuseboxFusePrivate" disguised="1"/>
	<enumeration name="FuseCategory" c:type="FuseboxFuseCategory" glib:type-name="FuseboxFuseCategory" glib:get-type="fusebox_fuse_category_get_type">
		<member name="network" c:identifier="FUSEBOX_FUSE_CATEGORY_NETWORK" value="0"/>
		<member name="personal" c:identifier="FUSEBOX_FUSE_CATEGORY_PERSONAL" value="1"/>
		<member name="system" c:identifier="FUSEBOX_FUSE_CATEGORY_SYSTEM" value="2"/>
	</enumeration>
</namespace>
</repository>
